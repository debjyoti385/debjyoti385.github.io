		
		var cloudmadeUrl = 'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',
			cloudmadeAttribution = 'Map data &copy; 2014 OpenStreetMap contributors, Imagery &copy; 2014 debjyotipaul.in',
			cloudmade = L.tileLayer(cloudmadeUrl, {maxZoom: 19, attribution: cloudmadeAttribution});

		var Esri_WorldTopoMap = L.tileLayer('http://server.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x}', {
				attribution: ''
			});
		var Esri_WorldStreetMap = L.tileLayer('http://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}', {
				attribution: ''
			});
		var Esri_WorldImagery = L.tileLayer('http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {
				attribution: ''
			});

		var OpenStreetMap_BlackAndWhite = L.tileLayer('http://{s}.www.toolserver.org/tiles/bw-mapnik/{z}/{x}/{y}.png', {
				attribution: ''
			});


		var map = new L.Map('map', {
			layers: [cloudmade, Esri_WorldTopoMap,Esri_WorldStreetMap,Esri_WorldImagery],
			center: new L.LatLng(28.64, 77.23),
			zoom: 10,
			fullscreenControl: true,
			fullscreenControlOptions: { // optional
				title:"Show me the fullscreen !"
			}
		});

		var sidebar = L.control.sidebar('sidebar', {
            closeButton: true,
            position: 'left'
        });
        map.addControl(sidebar);

		var LeafIcon = L.Icon.extend({
			options: {
				// shadowUrl: 'images/leaf-shadow.png',
				iconSize:     [38, 38],
				shadowSize:   [50, 64],
				iconAnchor:   [22, 94],
				shadowAnchor: [4, 62],
				popupAnchor:  [-3, -76]
			}
		});

		var greenIcon = new LeafIcon({iconUrl: 'images/leaf-green.png'}),
			blueIcon = new LeafIcon({iconUrl: 'images/pin_blue.png'}),
			pinkIcon = new LeafIcon({iconUrl: 'images/pink.png'});

		var newsLayer = L.markerClusterGroup();
		var markers = [];
		
		for (var i = 0; i < addressPoints.length; i++) {
			var a = addressPoints[i];
			var title = a[2];
			var marker = new MyCustomMarker(new L.LatLng(a[0], a[1]), { icon: pinkIcon, title: title });
			marker.bindPopup( title +" " + a[0]+ " "+ a[1] + "<img src='http://api.webthumbnail.org?width=300&height=300&screen=1024&url=http://timesofindia.indiatimes.com/india/Cabinet-clears-Telangana-bill-Andhra-Pradesh-CM-ready-to-be-sacked/articleshow/30005769.cms' alt='Generated by WebThumbnail.org' /> <div id='listContainer'> <div class='listControl'> <a id='expandList'>Expand All</a> <a id='collapseList'>Collapse All</a> </div> <ul id='expList'> <li> Item A <ul><li>hhhhhhii hii</li></ul></li> <li> <ul> Lorem IPSUM </ul> </li> </ul> Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec odio. Quisque volutpat mattis eros. Nullam malesuada erat ut turpis. Suspendisse urna nibh, viverra non, semper suscipit, posuere a, pede.</p><p>Donec nec justo eget felis facilisis fermentum. Aliquam porttitor mauris sit amet orci. Aenean dignissim pellentesque.", {
            	showOnMouseOver: true
       	 	});
       	 	markers.push(marker);
			newsLayer.addLayer(marker);
		}

		map.addLayer(newsLayer);

		var baseMaps = {
			"Imagery" : Esri_WorldImagery,
		    "WorldStreet": Esri_WorldStreetMap,
		    "TopoMap": Esri_WorldTopoMap,
		    "BlackWhite" : OpenStreetMap_BlackAndWhite		    
		};

		var overlayMaps = {
		    "News": newsLayer,
		};

		L.control.layers(baseMaps, overlayMaps).addTo(map);

		map.on('popupopen', function(e) {
  			var marker = e.popup._source;
  			// window.console.log(marker._popup.getContent());  			
  			

  			// sidebar.hide();
  			setTimeout(function () {
  				sidebar.setContent(marker._popup.getContent());
    	        sidebar.show();
    	        prepareList();
	        }, 1000);
  			
  			setTimeout(function(){
  				prepareList();
  			},2000);
		});

        map.on('click', function () {
        	rightSidebar.toggle();
            sidebar.hide();
        })

        sidebar.on('show', function () {
            console.log('Sidebar visible.');
        });

        sidebar.on('hide', function () {
            console.log('Sidebar hidden.');
        });

        L.DomEvent.on(sidebar.getCloseButton(), 'click', function () {
            console.log('Close button clicked.');
        });

		// detect fullscreen toggling
		map.on('enterFullscreen', function(){
			if(window.console) window.console.log('enterFullscreen');
		});
		map.on('exitFullscreen', function(){
			if(window.console) window.console.log('exitFullscreen');
		});

		map.on('move', function() {
	            // construct an empty list to fill with onscreen markers
	            var inBounds = [],
	            // get the map bounds - the top-left and bottom-right locations
	                bounds = map.getBounds();

	            // for each marker, consider whether it is currently visible by comparing
	            // with the current map bounds

	            for (var i = 0, len = markers.length; i < len; i++) {
	                var marker = markers[i];
	                if (bounds.contains(marker.getLatLng())) {
	                    inBounds.push(marker._popup.getContent());
	                    console.log(marker.options.title);
	                }
	            }

	            if(inBounds.length < 30){
	            // display a list of markers.
	            sidebar.setContent(inBounds.join('<br>\n'));
	        }
	    });


